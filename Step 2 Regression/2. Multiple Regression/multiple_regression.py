# -*- coding: utf-8 -*-
"""Multiple Regression.ipynb

Automatically generated by Colaboratory.

**Importing the libraries**
"""

import numpy as np;
import matplotlib.pyplot as plt;
import pandas as pd;

"""**Importing the dataset**"""

dataset = pd.read_csv('50_Startups.csv')
X = dataset.iloc[:, :-1].values #handles the independent variable - all columns apart from profit
y = dataset.iloc[:, -1].values #handles the dependent variable - profit

print(X)

"""**Encoding categorical data**"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3] )], remainder='passthrough')
X = np.array(ct.fit_transform(X))

print(X)

"""**Spliting the dataset into training and test set**"""

from sklearn.model_selection import train_test_split
X_train,X_test, y_train,y_test= train_test_split(X, y, test_size=0.2, random_state=0)

print(X_train)

"""**Training the Multiple linear regression model on the training set**"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""**Predicting the test set results**"""

y_pred =regressor.predict(X_test) #vector of predicted profit in the test set
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred), 1), (y_test.reshape(len(y_test), 1))), 1))