# -*- coding: utf-8 -*-
"""Simple Linear Regression.ipynb

Automatically generated by Colaboratory.

"""

# prompt: import the linraries
# importing lib
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# import the daatset
dataset = pd.read_csv('Salary_Data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

# spliting the dataset into test and training set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# training the simple regression model on training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# predicting the test set result
y_pred= regressor.predict(X_test)

# print(regressor.coef_)

# from sklearn.metrics import mean_squared_error, r2_score
# print("Mean squared error: %.2f" % mean_squared_error(y_test, y_pred))

# print("Coefficient of determination: %.2f" % r2_score(y_test, y_pred))

#  Visualizing the training set results
plt.scatter(X_train, y_train, color="red")
# plotting the regression line
plt.plot(X_train, regressor.predict(X_train), color="blue")
plt.title('Salary vs Experience(Training set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()



#  Visualizing the test set results
plt.scatter(X_test, y_test, color="red")
# plotting the regression line
plt.plot(X_train, regressor.predict(X_train), color="blue")
plt.title('Salary vs Experience(Training set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()