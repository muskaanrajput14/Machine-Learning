# -*- coding: utf-8 -*-
"""Polynomial Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RdH-o2EO7o1V5NVxd5KdaqAXoEbLW-c6

# **Importing libraries**
"""

import numpy as np;
import pandas as pd;
import matplotlib.pyplot as plt;

"""# **Importing the dataset**"""

dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:,1 :-1].values  #level
y = dataset.iloc[:, -1].values     #salary column

print(X)

"""# **Train the Linear Regression model on the whole dataset**"""

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(X, y)

"""# **Train the Polynomial Regression model on the whole dataset**"""

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree=4)
X_poly = poly_reg.fit_transform(X)
lin_reg_2 = LinearRegression()
lin_reg_2.fit(X_poly, y)

"""# **Visualising the Linear Regression result**"""

plt.scatter(X, y, color="red")
plt.plot(X, lin_reg.predict(X), color="blue")
plt.title("Truth or Bluff(Linear Regression)")
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()

"""# **Visualising the Polynomial Regression result**"""

plt.scatter(X, y, color="red")
plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color="blue")
plt.title("Truth or Bluff(Polynomial Regression)")
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()

"""# **Prediciting a new result with Linear Regression**"""

lin_reg.predict([[6.5]])

"""# **Prediciting a new result with Polynomial Regression**"""

lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))